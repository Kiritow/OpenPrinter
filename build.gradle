// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
  id "com.matthewprenger.cursegradle" version "1.0.7"
}
apply plugin: 'net.minecraftforge.gradle.forge'

def getGitRef() {
  try {
    def stdout = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'rev-parse', '--short', 'HEAD'
      standardOutput = stdout
    }
    return stdout.toString().trim()
  } catch (Throwable e) {
    return "unknown"
  }
}

if (System.getenv("PROMOTED_NUMBER") != null)
    ext.buildNumber = "${System.getenv("PROMOTED_NUMBER")}"
else if (System.getenv("BUILD_NUMBER") != null && System.getenv("BUILD_NUMBER") != 0)
    ext.buildNumber = "${System.getenv("BUILD_NUMBER")}"
else
    ext.buildNumber = "+" + getGitRef()

version = "0.1.0"
group = "pcl.openprinter"
archivesBaseName = "OpenPrinter-1.12.2"


repositories {
    maven {
        name = "OC repo"
        url = "http://maven.cil.li/"
    }
}

dependencies {
    deobfCompile "li.cil.oc:OpenComputers:MC1.12.2-1.7.1.+"
}

minecraft {
    version = "1.12.2-14.23.2.2619"
    runDir = "run"
    mappings = "snapshot_20180120"
    useDepAts = true
	replace "@VERSION@", project.version
	replace "@BUILD@", project.ext.buildNumber
}
version = "${version}.${project.ext.buildNumber}"
sourceSets.main.java.srcDir("./src/externs/java")

jar.doFirst {
	for (String s : new File("./src/externs/java").list())
		delete new File(sourceSets.main.output.classesDir, s);
}

//jar.classifier = "${ext.buildNumber}"


def curseforge_key = 0
def curse_changlog = "default"

if (project.hasProperty('openprinter_curseforge_key')) {
	curseforge_key = project.openprinter_curseforge_key
	curse_changlog = project.changelog
}

curseforge {
	apiKey = curseforge_key
	project {
		id = "225127"
		//addGameVersion '1.10.2'
		releaseType = "release"
		changelog = curse_changlog
	}
}


processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version + "." + project.ext.buildNumber, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// this is needed for IntelliJ so we don't have to copy over the assets manually every time
idea {
    module {
        outputDir = file('build/classes/main')
    }
}

